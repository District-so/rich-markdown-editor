webpackHotUpdate("main",{

/***/ "./src/lib/markdown/link_previews.ts":
/*!*******************************************!*\
  !*** ./src/lib/markdown/link_previews.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst token_1 = __importDefault(__webpack_require__(/*! markdown-it/lib/token */ \"./node_modules/markdown-it/lib/token.js\"));\nfunction isInline(token) {\n    return token.type === \"inline\";\n}\nfunction isParagraph(token) {\n    return token.type === \"paragraph_open\";\n}\nfunction isLinkOpen(token) {\n    return token.type === \"link_open\";\n}\nfunction isLinkClose(token) {\n    return token.type === \"link_close\";\n}\nfunction markdownItLinkPreview(md) {\n    md.core.ruler.push(\"link_with_preview\", state => {\n        const tokens = state.tokens;\n        let insideLink;\n        for (let i = tokens.length - 1; i > 0; i--) {\n            const tokenChildren = tokens[i].children || [];\n            for (let j = 0; j < tokenChildren.length - 1; j++) {\n                const current = tokenChildren[j];\n                if (!current)\n                    continue;\n                if (isLinkOpen(current)) {\n                    insideLink = current;\n                    continue;\n                }\n                if (isLinkClose(current)) {\n                    insideLink = null;\n                    continue;\n                }\n                if (current.content && insideLink && insideLink.attrs && insideLink.attrs.length > 1 && insideLink.attrs[1][0] == 'id') {\n                    let href = \"\";\n                    let id = null;\n                    let subtitle = null;\n                    let image = null;\n                    let event_day = null;\n                    let event_month = null;\n                    for (const attr of insideLink.attrs) {\n                        if (attr[0] == 'href') {\n                            href = attr[1];\n                        }\n                        if (attr[0] == 'id') {\n                            id = attr[1];\n                        }\n                        if (attr[0] == 'subtitle') {\n                            subtitle = attr[1];\n                        }\n                        if (attr[0] == 'image') {\n                            image = attr[1];\n                        }\n                        if (attr[0] == 'event_day') {\n                            event_day = attr[1];\n                        }\n                        if (attr[0] == 'event_month') {\n                            event_month = attr[1];\n                        }\n                    }\n                    const token = new token_1.default(\"link_with_preview\", \"a\", 0);\n                    token.attrSet(\"href\", href);\n                    token.attrSet(\"id\", id);\n                    token.attrSet(\"title\", current.content);\n                    token.attrSet(\"subtitle\", subtitle);\n                    token.attrSet(\"image\", image);\n                    if (event_day && event_month) {\n                        token.attrSet(\"event_obj\", {\n                            day: event_day,\n                            month: event_month\n                        });\n                    }\n                    tokens.splice(i - 1, 3, token);\n                    insideLink = null;\n                    break;\n                }\n            }\n        }\n        return false;\n    });\n}\nexports.default = markdownItLinkPreview;\n\n\n//# sourceURL=webpack:///./src/lib/markdown/link_previews.ts?");

/***/ })

})